pipeline:
  name: demo-utility
  identifier: demoutility
  projectIdentifier: test
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: account.Github_OAuth_1711001384310
        repoName: VishalTx/utility-v2
        build: <+input>
  stages:
    - stage:
        name: tewst
        identifier: tewst
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          caching:
            enabled: true
            override: false
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Docker
            spec: {}
          execution:
            steps:
              - step:
                  type: Run
                  name: Run_1
                  identifier: Run_1
                  spec:
                    connectorRef: Shabdockerhub
                    image: python
                    shell: Sh
                    command: |-
                      p#!/bin/bash

                      # Step 1: Install Python requirements
                      pip install -r src/requirements.txt

                      echo "Generating token..."

                      # Step 2: (Optional) Get token from script
                      # Uncomment the line below if your Python script generates the token
                      # aws_token=$(python tests/aws_key_updates_check.py)

                      # For now, using dummy token
                      aws_token="mytoken"

                      # Step 3: Move into project directory
                      cd src || exit 1

                      # Step 4: Check and update .env
                      if grep -q "^DEV_AWS_SESSION_TOKEN=" .env; then
                          # Replace existing value
                          sed -i "s/^DEV_AWS_SESSION_TOKEN=.*/DEV_AWS_SESSION_TOKEN=$aws_token/" .env
                          echo "Token updated in .env"
                      else
                          # Append if not present
                          echo "DEV_AWS_SESSION_TOKEN=$aws_token" >> .env
                          echo "Token key did not exist. Appended to .env"
                      fi

                      # Step 5: Copy the updated .env to a temp folder
                      mkdir -p /tmp/harness_env_check
                      cp .env /tmp/harness_env_check/.env

                      # Step 6: Optional - Show content for verification
                      echo "Updated .env file content in /tmp/harness_env_check:"
                      cat /tmp/harness_env_check/.env
        delegateSelectors:
          - docker-delegate-ubuntu
